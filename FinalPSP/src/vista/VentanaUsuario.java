/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import Datos.Usuario;
import Utilities.Comunicacion;
import Utilities.Seguridad;
import finalpsp.Constantes;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.Socket;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SealedObject;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static vista.VentanaAdmin.listaUsuarios;

/**
 *
 * @author Guille
 */
public class VentanaUsuario extends javax.swing.JFrame {

    private Socket servidor;
    private PrivateKey clavePrivPropia;
    private PublicKey clavePubAjena;
    public static Usuario usu;
    private ArrayList<String> amigosList;
    private ArrayList<Usuario> listaUsuarios;

    public VentanaUsuario(Usuario usu, Socket servidor, PrivateKey clavePrivPropia, PublicKey clavePubAjena) {
        this.usu = usu;
        this.servidor = servidor;
        this.clavePrivPropia = clavePrivPropia;
        this.clavePubAjena = clavePubAjena;
        initComponents();
        rellenarListaAmigos();
        rellenarListaUsuarios();
        cargarDatosUsu();
        setIconImage(Constantes.RUTA_IMA_USER);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblImaUser = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUsuarios = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        listAmigos = new javax.swing.JList<>();
        btnMostrarTodos = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtChat = new javax.swing.JTextArea();
        btnSendMsg = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblNick = new javax.swing.JLabel();
        btnMostrarAfines = new javax.swing.JButton();
        btnEditPrefs = new javax.swing.JButton();
        lblEmail = new javax.swing.JLabel();
        btnLike = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnChat = new javax.swing.JButton();
        btnVerPrefs = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableUsuarios);

        listAmigos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listAmigos);

        btnMostrarTodos.setText("Todos los usuarios");
        btnMostrarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarTodosActionPerformed(evt);
            }
        });

        txtChat.setColumns(20);
        txtChat.setRows(5);
        jScrollPane3.setViewportView(txtChat);

        btnSendMsg.setText("Enviar mensage");

        jLabel3.setText("Lista de Amigos");

        jLabel4.setText("Lista de Usuarios");

        jLabel5.setText("Mensagería");

        lblNick.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNick.setText("Prueba");

        btnMostrarAfines.setText("Usuarios afines");
        btnMostrarAfines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarAfinesActionPerformed(evt);
            }
        });

        btnEditPrefs.setText("Editar preferencias");
        btnEditPrefs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPrefsActionPerformed(evt);
            }
        });

        lblEmail.setText("prueba@prueba.com");

        btnLike.setText("Marcar Like");
        btnLike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLikeActionPerformed(evt);
            }
        });

        jLabel8.setText("Mostrar en la lista:");

        btnChat.setText("Chat");

        btnVerPrefs.setText("Ver gustos");
        btnVerPrefs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerPrefsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(192, 192, 192)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(83, 83, 83))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEditPrefs, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(66, 66, 66)
                                        .addComponent(btnLike, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnVerPrefs, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnChat, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(btnSendMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblImaUser, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblNick)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8))
                                    .addComponent(lblEmail))
                                .addGap(12, 12, 12)
                                .addComponent(btnMostrarTodos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnMostrarAfines, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)))
                        .addGap(21, 21, 21))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblImaUser, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNick)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblEmail))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMostrarTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMostrarAfines, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEditPrefs, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLike, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnVerPrefs, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnChat, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSendMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditPrefsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPrefsActionPerformed

        VentanaPrefs vp = new VentanaPrefs(this, true, usu, servidor, clavePrivPropia, clavePubAjena);
        vp.setVisible(true);
        vp.setLocationRelativeTo(this);

    }//GEN-LAST:event_btnEditPrefsActionPerformed

    private void btnLikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLikeActionPerformed
        
        if (tableUsuarios.getSelectedRow() != -1) {
            
            try {
                
                //envio la orden al servidor
                int orden = 1;
                SealedObject so =Seguridad.cifrar(this.clavePubAjena, orden);
                Comunicacion.enviarObjeto(servidor, so);
                
                //creo el me gusta con los ids y lo envio
                ArrayList<String> idsMegusta = new ArrayList<String>();
                idsMegusta.add(this.usu.getId());
                idsMegusta.add(listaUsuarios.get(tableUsuarios.getSelectedRow()).getId());
                
                so = Seguridad.cifrar(clavePubAjena, idsMegusta);
                Comunicacion.enviarObjeto(servidor, so);
                
                JOptionPane.showMessageDialog(null, "Usuario marcado como me gusta");
                //espero la respuesta
                rellenarListaAmigos();
                
                
            } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | IOException | IllegalBlockSizeException ex) {
                Logger.getLogger(VentanaUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Debes seleccionar un usuario");
        }
        
    }//GEN-LAST:event_btnLikeActionPerformed

    private void btnVerPrefsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerPrefsActionPerformed
        
        if (tableUsuarios.getSelectedRow() != -1) {
            
            VentanaGustos vg = new VentanaGustos(this, true, listaUsuarios.get(tableUsuarios.getSelectedRow()));
            vg.setVisible(true);
            vg.setLocationRelativeTo(this);
            
        }else{
             JOptionPane.showMessageDialog(null, "Debes seleccionar un usuario para ver sus gustos");
        }
        
    }//GEN-LAST:event_btnVerPrefsActionPerformed

    private void btnMostrarAfinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarAfinesActionPerformed
        
        try {
            
            //envio la orden al servidor
            int orden = 2;
            SealedObject so =Seguridad.cifrar(this.clavePubAjena, orden);
            Comunicacion.enviarObjeto(servidor, so);
            
            //envio el usuario
            so = Seguridad.cifrar(clavePubAjena, this.usu);
            Comunicacion.enviarObjeto(servidor, so);
            
            rellenarListaUsuarios();
            
            
        } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | IOException | IllegalBlockSizeException ex) {
            Logger.getLogger(VentanaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnMostrarAfinesActionPerformed

    private void btnMostrarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarTodosActionPerformed
        
        try {
            
            //envio la orden al servidor
            int orden = 3;
            SealedObject so =Seguridad.cifrar(this.clavePubAjena, orden);
            Comunicacion.enviarObjeto(servidor, so);
            
            rellenarListaUsuarios();
            
        } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | IOException | IllegalBlockSizeException ex) {
            Logger.getLogger(VentanaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnMostrarTodosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChat;
    private javax.swing.JButton btnEditPrefs;
    private javax.swing.JButton btnLike;
    private javax.swing.JButton btnMostrarAfines;
    private javax.swing.JButton btnMostrarTodos;
    private javax.swing.JButton btnSendMsg;
    private javax.swing.JButton btnVerPrefs;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblImaUser;
    private javax.swing.JLabel lblNick;
    private javax.swing.JList<String> listAmigos;
    private javax.swing.JTable tableUsuarios;
    private javax.swing.JTextArea txtChat;
    // End of variables declaration//GEN-END:variables

    private void cargarDatosUsu() {
        lblNick.setText(usu.getNick());
        lblEmail.setText(usu.getEmail());

    }

    public void setIconImage(String ruta) {
        try {

            File im = new File(ruta);
            BufferedImage img = ImageIO.read(im);
            Image dimg = img.getScaledInstance(lblImaUser.getWidth(), lblImaUser.getHeight(),
                    Image.SCALE_SMOOTH);
            ImageIcon imageIcon = new ImageIcon(dimg);
            lblImaUser.setIcon(imageIcon);

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void rellenarListaAmigos() {

        try {

            SealedObject so = (SealedObject) Comunicacion.recibirObjeto(servidor);
            this.amigosList = (ArrayList<String>) Seguridad.descifrar(clavePrivPropia, so);

            DefaultListModel model = new DefaultListModel();

            for (int i = 0; i < amigosList.size(); i++) {
                model.addElement(amigosList.get(i));
            }

            listAmigos.setModel(model);

        } catch (IOException | ClassNotFoundException | NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException | IllegalBlockSizeException | BadPaddingException ex) {
            Logger.getLogger(VentanaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void rellenarListaUsuarios() {

        try {

            //SealedObject so = (SealedObject) Comunicacion.recibirObjeto(servidor);
            this.listaUsuarios = (ArrayList<Usuario>) Comunicacion.recibirObjeto(servidor);

            DefaultTableModel modelo = new DefaultTableModel();

            modelo.addColumn("Nick");
            modelo.addColumn("Edad");
            modelo.addColumn("Genero");
            

            Object[] o = new Object[3];
            for (int i = 0; i < listaUsuarios.size(); i++) {
                o[0] = listaUsuarios.get(i).getNick();
                o[1] = listaUsuarios.get(i).getEdad();
                //o[2] = listaUsuarios.get(i).getGenero();
                if (listaUsuarios.get(i).getGenero() == 1) {
                    o[2] = "Hombre";
                } else {
                    o[2] = "Mujer";
                }

                modelo.addRow(o);
            }
            tableUsuarios.setModel(modelo);
            tableUsuarios.setDefaultEditor(Object.class, null);

        } catch (IOException | ClassNotFoundException  ex) {
            Logger.getLogger(VentanaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
